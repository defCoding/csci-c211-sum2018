#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 31 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 933 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 187
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |Lab 4 (E"
 #"xam 01)|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #("
 #"#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 23 #";Question 1 (10 points)"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; sqrt: Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Calculates the square root of a given value."
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 192
(
 #"; I believe this is correct because as shown below, the sqrt functio"
 #"n does take the square root of a given number. Furthermore, it takes"
 #" a number as its parameter and outputs a number as well."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 2 #"36"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; expt: Number and number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; Calculates the value of the first given number to the power of the"
 #" second given number."
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 197
(
 #"; I believe this is correct because as shown below, the expt functio"
 #"n does take the first number to the power of the second number. It t"
 #"akes two numbers as its parameter and outputs another number."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 2 #"64"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 2"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; (/ 2 (+ 1 (sqrt 5)))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 212
(
 #"; I believe this is incorrect because when this expression is evalua"
 #"ted, the output is not equal to the example on the exam. My mistake "
 #"was that I put (+ 1 (sqrt 5)) after the 2, when I should have put it"
 #" before."
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; The answer I gave divided 2 by (+ 1 (sqrt 5)) instead of (+ 1 (sqr"
 #"t 5)) by 2."
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #"; The Correct Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; (/ (+ 1 (sqrt 5)) 2)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 12 #"1.6180339887"
0 0 24 3 1 #" "
0 0 21 3 10 #"0.00000001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 3"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #"; (* (/ 1 (sqrt 5))(- (expt (/ 2 (+ 1 (sqrt 5))) n) (expt (/ 2 (- 1 "
 #"(sqrt 5))) n)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; This"
0 0 17 3 1 #" "
0 0 17 3 6 #"answer"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 7 #"correct"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"I"
0 0 17 3 1 #" "
0 0 17 3 4 #"made"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 7 #"mistake"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 1 #"I"
0 0 17 3 1 #" "
0 0 17 3 3 #"did"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 8 #"question"
0 0 17 3 1 #" "
0 0 17 3 2 #"2."
0 0 17 3 1 #" "
0 0 17 3 2 #"I "
0 0 17 3 3 #"did"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 9 #"correctly"
0 0 17 3 1 #" "
0 0 17 3 5 #"place"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 3 #"+/-"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sqrt"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 2 #"))"
0 0 17 3 1 #"."
0 0 17 3 1 #" "
0 0 17 3 1 #"I"
0 0 17 3 1 #" "
0 0 17 3 4 #"have"
0 0 17 3 26 #" their positions reversed."
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; The Correct Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #"; (* (/ 1 (sqrt 5))(- (expt (/ (+ 1 (sqrt 5)) 2) n) (expt (/ (- 1 (s"
 #"qrt 5)) 2) n)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #"; I make the same mistake in question 5, so I will demonstrate the c"
 #"heck-expect there."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q3"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 4"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; n is a natural number."
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Examples: 1, 4, 12, 200, 1256"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; binet: number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Calculates the given nth Fibonacci number."
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Examples: (binet 1) -> 1, (binet 6) -> 8, (binet 11) -> 89"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; (define (binet n)"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";    (... * ... / ... + ... - ... sqrt ... expt))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 180
(
 #"; I believe this answer is correct because while I made the mistake "
 #"of ordering the parameters for the / function incorrectly, this does"
 #" not affect the design recipe itself because"
) 0 0 24 29 1 #"\n"
0 0 17 3 179
(
 #"; the design recipe simply asks for what operators are used. The des"
 #"ign recipe also correctly states that the function accepts a number "
 #"(the desired position) and outputs a number"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (the Fibonacci number in that position)."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q4"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 5"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; n is a natural number."
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Examples: 2, 6, 13, 215, 6341"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; fibo: number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Calculates the given nth Fibonacci number."
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; Examples: (fibo 0) -> 0, (fibo 1) -> 1, (fibo 12) -> 144"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; (define (fibo n)"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";    (... * ... / ... + ... - ... sqrt ... expt))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; (define (fibo n)"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";    (* (/ 1 (sqrt 5))(- (expt (/ 2 (+ 1 (sqrt 5))) n) (expt (/ 2 (-"
 #" 1 (sqrt 5))) n)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #"; (check-expect (fibo 3) 2)"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; (check-expect (fibo 0) 0)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; (check-expect (fibo 15) 610)"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 119
(
 #"; As mentioned before, this is incorrect because I did not place the"
 #" parameters of the / function in the correct order."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; The Correct Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; n is a natural number."
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Examples: 2, 6, 13, 215, 6341"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; fibo: number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Calculates the given nth Fibonacci number."
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; Examples: (fibo 0) -> 0, (fibo 1) -> 1, (fibo 12) -> 144"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; (define (fibo n)"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";    (... * ... / ... + ... - ... sqrt ... expt))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 6 #"0.0001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 3 #"610"
0 0 24 3 1 #" "
0 0 21 3 6 #"0.0001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q5"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 6"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; My Answer:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Five Functions:"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; 1 make-student: string number string -> student"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";       Creates a student with given name, age, major."
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; 2 student-name: student -> string"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";       Extracts the string name from student."
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; 3 student-age: student -> number"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";       Extracts the number age from student."
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; 4 student-major: student -> string"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";       Extracts the string major from student."
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; 5 student?: value -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";       Checks if the given value is a student. If it is, returns tr"
 #"ue, else returns false."
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #"; My Analysis"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"; I believe these to be all correct. The following is copied from Le"
 #"cture 3 rkt file:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; Welcome"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"DrRacket"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 7 #"version"
0 0 17 3 10 #" 6.9 [3m]."
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; Language: Beginning Student; memory limit: 128 MB."
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; > point?"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; point?:"
0 0 17 3 1 #" "
0 0 17 3 8 #"expected"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"but"
0 0 17 3 1 #" "
0 0 17 3 5 #"there"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"no"
0 0 17 3 1 #" "
0 0 17 3 4 #"open"
0 0 17 3 1 #" "
0 0 17 3 11 #"parenthesis"
0 0 17 3 21 #" before this function"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; > (point? 4)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; #false"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; > ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 2 #"p1"
0 0 17 3 2 #" ("
0 0 17 3 16 #"make-point 0 3))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; > p1"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; (make-point 0 3)"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; > (point? p1)"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; #true"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; > (point-x p1)"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; 0"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; > (point-y p1)"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 162
(
 #"; As shown, when you make-point, you use the arguments afterwards to"
 #" create the structure point. In this question, those arguments are s"
 #"tring, number, and string,"
) 0 0 24 29 1 #"\n"
0 0 17 3 179
(
 #"; and it creates the structure student. The function point-x pulls o"
 #"ut the number 0 from the structure point, so student-name would pull"
 #" out the string from the structure student."
) 0 0 24 29 1 #"\n"
0 0 17 3 178
(
 #"; This applies to the next two functions, student-age and student-ma"
 #"jor, as well, with the corresponding data types, number and string, "
 #"respectively. The final function, student?"
) 0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #"; is similar to point?. They both accept any sort of value, and then"
 #" returns a boolean, either true or false."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q6"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Question 7"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #"; My Answer: (To avoid having to copy paste, I will also add labeled"
 #" corrections in my answer as well)."
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #"; n is a number (integer)"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Examples: -12, 0, 2, 26, 1423"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; render: number -> image"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; Creates an image of the given number on a white rectangle with a b"
 #"lack outline."
) 0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #"; Examples: (render 36) -> (image on exam), (render 252) -> (image o"
 #"n exam), (render -12) -> (image on exam)"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #"; (define (render n)"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";    (... text ... number->string ... empty-scene ... overlay/align "
 #"... place-image ...))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 2 #") "
0 0 17 3 145
(
 #"; My mistake here was that I forgot to put this function in before t"
 #"he rest of my code, meaning that functions like place-image were not"
 #" defined."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"Please enter a valid number.\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 2 #") "
0 6           4 21 1114
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 160 0) #(struct:p"
 #"oint 160 90) #(struct:point 0 90)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 52.0 16.5 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 14.0 28.5 #(struct:text \"4\" 0 1 \"black"
 #"\" 50 #f swiss normal normal #f))) #(struct:translate 28.0 0.0 #(str"
 #"uct:translate 14.0 28.5 #(struct:text \"5\" 0 1 \"black\" 50 #f swis"
 #"s normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 160 0) #(struct:point 160 90) #(struct:"
 #"point 0 90)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 160 0 0 0) #(struct:pulled"
 #"-point 0 0 160 90 0 0) #(struct:pulled-point 0 0 0 90 0 0)) outline "
 #"#(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 160 0 0 0) #(struct:pulled-point"
 #" 0 0 160 90 0 0) #(struct:pulled-point 0 0 0 90 0 0)) 255 \"white\")"
 #"))))))))) #(struct:bb 160 90 90.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 21 3 3 #"365"
0 0 24 3 2 #") "
0 6           4 21 1275
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 160 0) #(struct:p"
 #"oint 160 90) #(struct:point 0 90)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 38.0 16.5 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 1"
 #"4.0 28.5 #(struct:text \"3\" 0 1 \"black\" 50 #f swiss normal normal"
 #" #f))) #(struct:translate 28.0 0.0 #(struct:translate 14.0 28.5 #(st"
 #"ruct:text \"6\" 0 1 \"black\" 50 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 56.0 0.0 #(struct:t"
 #"ranslate 14.0 28.5 #(struct:text \"5\" 0 1 \"black\" 50 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 160 0) #(struct:point 160 90) #(struct:point"
 #" 0 90)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 160 0 0 0) #(struct:pulled-poin"
 #"t 0 0 160 90 0 0) #(struct:pulled-point 0 0 0 90 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 160 0 0 0) #(struct:pulled-point 0 0 "
 #"160 90 0 0) #(struct:pulled-point 0 0 0 90 0 0)) 255 \"white\"))))))"
 #")))) #(struct:bb 160 90 90.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 21 3 3 #"-46"
0 0 24 3 2 #") "
0 6           4 21 1274
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 160 0) #(struct:p"
 #"oint 160 90) #(struct:point 0 90)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 43.5 16.5 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 8"
 #".5 28.5 #(struct:text \"-\" 0 1 \"black\" 50 #f swiss normal normal "
 #"#f))) #(struct:translate 17.0 0.0 #(struct:translate 14.0 28.5 #(str"
 #"uct:text \"4\" 0 1 \"black\" 50 #f swiss normal normal #f))))) #(str"
 #"uct:translate 45.0 0.0 #(struct:translate 14.0 28.5 #(struct:text \""
 #"6\" 0 1 \"black\" 50 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 160 0) #(st"
 #"ruct:point 160 90) #(struct:point 0 90)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 160 0 0 0) #(struct:pulled-point 0 0 160 90 0 0) #(struct:pulled-p"
 #"oint 0 0 0 90 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 160 "
 #"0 0 0) #(struct:pulled-point 0 0 160 90 0 0) #(struct:pulled-point 0"
 #" 0 0 90 0 0)) 255 \"white\")))))))))) #(struct:bb 160 90 90.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ABC\""
0 0 24 3 2 #") "
0 0 19 3 30 #"\"Please enter a valid number.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; My Analysis:"
0 0 24 29 1 #"\n"
0 0 17 3 177
(
 #"; As shown above, the code I wrote worked except for one issue. I fo"
 #"rgot to import 2htdp/image, which meant that certain lines of code, "
 #"specifically place-image, would not work."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; My given score:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";Total Score Calculator"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; % is a number."
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Examples: 44, 56, 0, 94"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; calcGrade: number -> string"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; Takes a given number and converts it to the correct letter grade."
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Examples: (calcGrade 92) -> \"A-\", (calcGrade 33) -> \"F', (calcG"
 #"rade 76) -> \"C\""
) 0 0 24 29 1 #"\n"
0 0 17 3 23 #"; (define (calcGrade $)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";    (... cond ... < ... >= ...)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"59.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"F\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"62.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"D-\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"66.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"69.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"D+\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"72.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"C-\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"76.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"79.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"C+\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"82.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"B-\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"86.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"89.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"B+\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"92.5"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"A-\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 4 #"96.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"%"
0 0 24 3 1 #" "
0 0 21 3 2 #"97"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"A+\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"F\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 21 3 2 #"83"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"C-\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 21 3 4 #"97.1"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"A+\""
0 0 24 3 2 #") "
0 0 17 3 161
(
 #";Looking at this code, I definitely could have executed the GPA to L"
 #"etter Grade Calculator from Lab 03 much better and cleaner. There we"
 #"re a lot of redundancies."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"gradeTotal"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q1"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q2"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q3"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q4"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q5"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q6"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"I graded my exam to be a \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 10 #"gradeTotal"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 3 #"out"
0 0 19 3 9 #" of 100.\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"That is a \""
0 0 24 3 2 #" ("
0 0 14 3 9 #"calcGrade"
0 0 24 3 1 #" "
0 0 14 3 10 #"gradeTotal"
0 0 24 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
